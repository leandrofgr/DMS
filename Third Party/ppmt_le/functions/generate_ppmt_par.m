function generate_ppmt_par(params)

params.ref_file = strrep(params.ref_file,'\','\\');
params.nscored_f = strrep(params.nscored_f,'\','\\');
params.ppmt_out = strrep(params.ppmt_out,'\','\\');
params.ppmt_table_file = strrep(params.ppmt_table_file,'\','\\');
columns = strrep(num2str(params.columns),'  ',' ');

text = ['                        Parameters for PPMT\n',...
'                         *******************\n',...
'\n',...
'START OF PARAMETERS:\n',...
params.ref_file,'     -input data file\n',...
num2str(params.n_vars),' ',columns,' 0              -  number of variables, variable cols, and wt col\n',...
'-5 1e21       -  trimming limits\n',...
'25 50 50            -min/max iterations and targeted Gauss perc. (see Note 1)\n',...
'1                   -spatial decorrelation? (0=no,1=yes) (see Note 2)\n',...
'1 2 0                -  x, y, z columns (0=none for z)\n',...
'50 25                -  lag distance, lag tolerance\n',...
params.nscored_f,'           -output data file with normal score transformed variables\n',...
params.ppmt_out,'             -output data file with PPMT transformed variables\n',...
params.ppmt_table_file,'             -output transformation table (binary)'];
    

% Note 1: Optional stopping criteria, where the projection pursuit algorithm will terminate
% after reaching the targetted Gaussian percentile. The input percentile range is 1 (very Gaussian)
% to 99 (barely Gaussian); the percentiles are calculated using random Gaussian distributions.
% The min/max iterations overrides the targetted Gaussian percentile.
% 
% Note 2: Option to apply min/max autocorrelation factors after the projection pursuit algorithm
% to decorrelate the variables at the specified non-zero lag distance.

fid = fopen(params.ppmt_par_file,'wt');
fprintf(fid, text);
fclose(fid);
end

